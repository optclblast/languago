version: '3.7'

networks:
  languago:
    name: languago
    driver: bridge
  networks:
  caddy:
    external: true

services:
  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - caddy_data:/data
    restart: unless-stopped

  backend:
    build:
      context: ./back
      target: languago_builder
    hostname: backend
    networks:
      - languago
      - caddy
    labels:
      caddy: http://languago:3300
      caddy.reverse_proxy: "{{upstreams 80}}"
    # depends_on:
    #   database:
    #     condition: service_started

  # database:
  #   image: postgres:15
  #   container_name: languago_pg
  #   hostname: languago_db
  #   restart: always
  #   environment:
  #     - PGUSER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=postgres
  #   volumes:
  #     - ./back/cfg/schemas/postgresql/pg.sql:/docker-entrypoint-initdb.d/init.sql
  #     - pg_languago:/var/lib/postgresql/data
  #   ports:
  #     - 5432:5432
  #   networks:
  #     - languago
  #   healthcheck:
  #     test: [ "CMD", "-U", "postgres", "pg_isready" ]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 10
  #     start_period: 10s

volumes:
  pg_languago:
  caddy_data: {}
  caddy_config: